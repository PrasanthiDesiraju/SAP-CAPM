PROCEDURE "get_po_header_data"( 

    out et_emp_total_orders table(
        loginname nvarchar(12),
        create_cnt integer,
        change_cnt integer,
        combine_cnt integer,
        name varchar(100),
        fullname varchar(256)
    )


)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/

et_po_create_cnt = select count(*) as create_cnt, "CREATEDBY" as eid from 
"EPM_DB_TRANSACTION_PURCHASEORDER" WHERE ID in (
    select "PARENT_KEY_ID" from "EPM_DB_TRANSACTION_POITEMS"
    where "PRODUCT_GUID_NODE_KEY" is not null ) 
    group by createdby;

et_po_change_cnt = select count(*) as change_cnt, "MODIFIEDBY" as eid FROM
EPM_DB_TRANSACTION_PURCHASEORDER where ID IN (
SELECT "PARENT_KEY_ID" from EPM_DB_TRANSACTION_POITEMS
where "PRODUCT_GUID_NODE_KEY" IS NOT NULL ) GROUP BY "MODIFIEDBY";

et_emp_total_orders =  SELECT  emp.loginname,crt.create_cnt,chg.change_cnt,
         crt.create_cnt + chg.change_cnt as combine_cnt,
         concat( CONCAT( emp.namefirst, ' '),  emp.namelast) as name,
         "get_full_name"( emp.namefirst, emp.namemiddle, emp.namelast, emp.id ) as fullname
          from "EPM_DB_MASTER_EMPLOYEES" AS emp LEFT OUTER JOIN
           :et_po_create_cnt as crt on emp.id = crt.eid      
           LEFT OUTER JOIN :et_po_change_cnt as chg on emp.id = chg.eid
           ORDER BY combine_cnt DESC
           limit 5 offset 5;


END